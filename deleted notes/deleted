~~~NSIMAGE~~~

// module.exports.execute = async(client, message, cmd, args, Discord) => {
//     axios.get('https://api.thecatapi.com/v1/images/search').then(response => {
//         let embed = new Discord.MessageEmbed()
//             .setTitle('Mmmm.. Nice :)')
//             .setImage(response.data[0].url)
//             .setColor('RED');

//         return message.channel.send(embed);
//     });
// 	}
// }
//'https://api.thecatapi.com/v1/images/search
//'http://results.dogpile.com/serp?qc=images&q=" + search



// const prefix = '-';
// var cheerio = require("cheerio");
// var request = require("request");

// var discord = require("discord.js");
// var client = new discord.Client();



// // client.login(process.env.DISCORD_TOKEN);

// client.on("ready", function() {
	
// });


// client.on("message", function(message) {

// 	var parts = message.content.split(" "); 
// 	if (parts[0] === "-nsimage") {
// 		image(message, parts); 
// 	}

// });

// function image(message, parts) {

	
// 	var search = parts.slice(1).join(" "); 
// 	var options = {
// 	    url: "http://results.dogpile.com/serp?qc=images&q=" + search,
// 	    method: "GET",
// 	    headers: {
// 	        "Accept": "text/html",
// 	        "User-Agent": "Chrome",
// 			"Cookie": "ws_prefs=vr=1&af=None"
// 	    }
// 	};
// 	request(options, function(error, response, responseBody) {
// 		if (error) {
			
// 			return;
// 		}

		

// 		$ = cheerio.load(responseBody);

		
// 		var links = $(".image a.link");

	
// 		var urls = new Array(links.length).fill(0).map((v, i) => links.eq(i).attr("href"));
// 		console.log(urls);
// 		if (!urls.length) {
			
// 			return;
// 		}
//                 var errMessage = "**This Is Not An NSFW Channel**";
//         if (!message.channel.nsfw) {
//         message.react('ðŸ’¢');

//       return message.reply(errMessage)
//       .then(msg => {
//       msg.delete({ timeout: 3000 })
//       })
      
//   }
//                 if (!message.channel.nsfw) return message.channel.send('**You Must Use This Command In An NSFW Channel**!') 

// 		 const embed = new discord.MessageEmbed()
// 		 .setTitle('Mmmm.. Nice :)')
//          .setImage( urls[~~(Math.random() * urls.length)]  );
// 		 message.channel.send(embed)
        
// 	});

// }

~~~Mute~~~

// const redis = require('./redis.js')


// module.exports = (client) => {
//   const redisKeyPrefix = 'muted-'

//   redis.expire((message) => {
//     if (message.startsWith(redisKeyPrefix)) {
//       const split = message.split('-')

//       const memberId = split[1]
//       const guildId = split[2]

//       const guild = client.guilds.cache.get(guildId)
//       const member = guild.members.cache.get(memberId)

//       const role = getRole(guild)

//       member.roles.remove(role)
//     }
//   })

//   const getRole = (guild) => {
//     return guild.roles.cache.find((role) => role.name === 'Muted')
//   }

//   const giveRole = (member) => {
//     const role = getRole(member.guild)
//     if (role) {
//       member.roles.add(role)
//       console.log('Muted ' + member.id)
//     }
//   }

//   const onJoin = async (member) => {
//     const { id, guild } = member

//     const redisClient = await redis()
//     try {
//       redisClient.get(`${redisKeyPrefix}${id}-${guild.id}`, (err, result) => {
//         if (err) {
//           console.error('Redis GET error:', err)
//         } else if (result) {
//           giveRole(member)
//         } else {
//           console.log('The user is not muted')
//         }
//       })
//     } finally {
//       redisClient.quit()
//     }
//   }

//   command(client, 'simjoin', (message) => {
//     onJoin(message.member)
//   })

//   client.on('guildMemberAdd', (member) => {
//     onJoin(member)
//   })

//   command(client, 'mute', async (message) => {
//     // !mute @ duration duration_type

//     const syntax = '!mute <@> <duration as a number> <m, h, d, or life>'

//     const { member, channel, content, mentions, guild } = message

//     if (!member.hasPermission('ADMINISTRATOR')) {
//       channel.send('You do not have permission to run this command.')
//       return
//     }

//     const split = content.trim().split(' ')

//     if (split.length !== 4) {
//       channel.send('Please use the correct command syntax: ' + syntax)
//       return
//     }

//     const duration = split[2]
//     const durationType = split[3]

//     if (isNaN(duration)) {
//       channel.send('Please provide a number for the duration. ' + syntax)
//       return
//     }

//     const durations = {
//       m: 60,
//       h: 60 * 60,
//       d: 60 * 60 * 24,
//       life: -1,
//     }

//     if (!durations[durationType]) {
//       channel.send('Please provide a valid duration type. ' + syntax)
//       return
//     }

//     const seconds = duration * durations[durationType]

//     const target = mentions.users.first()

//     if (!target) {
//       channel.send('Please tag a user to mute.')
//       return
//     }

//     const { id } = target

//     console.log('ID:', id)

//     const targetMember = guild.members.cache.get(id)
//     giveRole(targetMember)

//     const redisClient = await redis()
//     try {
//       const redisKey = `${redisKeyPrefix}${id}-${guild.id}`

//       if (seconds > 0) {
//         redisClient.set(redisKey, 'true', 'EX', 10)
//       } else {
//         redisClient.set(redisKey, 'true')
//       }
//     } finally {
//       redisClient.quit()
//     }
//   })
// }
